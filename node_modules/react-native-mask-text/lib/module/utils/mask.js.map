{"version":3,"names":["BigNumber","toPattern","unMask","value","type","unMaskedValue","replace","number","parseInt","trimStart","toString","masker","pattern","options","autoCapitalize","sentence","toUpperCase","text","lower","toLowerCase","charAt","substring","currencyMasker","prefix","decimalSeparator","groupSeparator","precision","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","suffix","precisionDivider","repeat","formatter","bigNumber","config","FORMAT","toFormat","dateMasker","dateFormat","regex","replaceAll","timeMasker","timeFormat","multimasker","patterns","reduce","memo","length","mask","String"],"sources":["mask.ts"],"sourcesContent":["/* eslint-disable no-confusing-arrow */\nimport { BigNumber } from 'bignumber.js'\nimport type { AutoCapitalizeOptions } from 'src/@types/AutoCapitalizeOptions'\nimport type { FormatType } from '../@types/FormatType'\nimport toPattern from './toPattern'\n\n/**\n * function unMask(\n * @param {string} value\n * @param {'custom' | 'currency'} type\n * @returns {string}\n */\nfunction unMask(value: string, type: 'custom' | 'currency' = 'custom') {\n  if (type === 'currency') {\n    if (!value) return '0'\n\n    const unMaskedValue = value.replace(/\\D/g, '')\n    const number = parseInt(unMaskedValue.trimStart())\n\n    return number.toString()\n  }\n\n  return value.replace(/\\W/g, '')\n}\n\n/**\n * function masker(\n * @param {string} value\n * @param {string} patterns\n * @param {any} options\n * @returns {string}\n */\nfunction masker(value: string, pattern: string, options: any) {\n  const { autoCapitalize } = options\n\n  const sentence = toPattern(value, { pattern, ...options })\n\n  switch (autoCapitalize) {\n    case 'characters':\n      sentence.toUpperCase()\n      break\n    case 'words':\n      sentence.replace(/(?:^|\\s)\\S/g, (text) => text.toUpperCase())\n      break\n    case 'sentences':{\n      const lower = sentence.toLowerCase()\n      lower.charAt(0).toUpperCase() + lower.substring(1)\n      break\n    }\n  }\n\n  return sentence\n}\n\n/**\n * function masker(\n * @param {string} value\n * @param {any} options\n * @returns {string}\n */\nfunction currencyMasker(value = '0', options: any) {\n  const {\n    prefix,\n    decimalSeparator,\n    groupSeparator,\n    precision,\n    groupSize,\n    secondaryGroupSize,\n    fractionGroupSeparator,\n    fractionGroupSize,\n    suffix,\n  } = options\n\n  const precisionDivider = parseInt(1 + '0'.repeat(precision || 0))\n  const number = parseInt(value) / precisionDivider\n\n  const formatter = {\n    prefix,\n    decimalSeparator,\n    groupSeparator,\n    groupSize: groupSize || 3,\n    secondaryGroupSize,\n    fractionGroupSeparator,\n    fractionGroupSize,\n    suffix,\n  }\n\n  const bigNumber = new BigNumber(number)\n\n  BigNumber.config({ FORMAT: formatter })\n\n  return bigNumber.toFormat(precision)\n}\n\nfunction dateMasker(value = '', options: any) {\n  const { dateFormat = 'yyyy/mm/dd' } = options\n\n  const regex = /[a-zA-Z]/gi\n  const pattern = dateFormat.replaceAll(regex, '9')\n  return masker(value, pattern, {})\n}\n\nfunction timeMasker(value = '', options: any) {\n  const { timeFormat = 'HH:mm:ss' } = options\n\n  const pattern = timeFormat\n  return masker(value, pattern, {})\n}\n\n/**\n * function multimasker(\n * @param {string} value\n * @param {string[]} patterns\n * @param {any} options\n * @returns {string}\n */\nfunction multimasker(value: string, patterns: string[], options: any) {\n  return masker(\n    value,\n    patterns.reduce(\n      (memo: string, pattern: string) =>\n        value.length <= unMask(memo).length ? memo : pattern,\n      patterns[0]\n    ),\n    options\n  )\n}\n\nfunction mask(\n  value: string | number,\n  pattern: string | string[] = '',\n  type: FormatType = 'custom',\n  options?: any,\n  autoCapitalize?: AutoCapitalizeOptions\n): string {\n  if (type === 'currency') {\n    return currencyMasker(String(value), options)\n  }\n\n  if (type === 'date') {\n    return dateMasker(String(value), options)\n  }\n\n  if (type === 'time') {\n    return timeMasker(String(value), options)\n  }\n\n  if (typeof pattern === 'string') {\n    return masker(String(value), pattern || '', {\n      autoCapitalize: autoCapitalize,\n    })\n  }\n\n  return multimasker(String(value), pattern, {})\n}\n\nexport { mask, unMask }\n"],"mappings":"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"}
{"version":3,"names":["React","useEffect","useState","forwardRef","TextInput","mask","unMask","MaskedTextInputComponent","ref","pattern","type","options","defaultValue","onChangeText","value","inputAccessoryView","autoCapitalize","textBold","textItalic","textDecoration","style","rest","styleSheet","fontWeight","fontStyle","textDecorationLine","getMaskedValue","getUnMaskedValue","defaultValueCustom","defaultValueCurrency","initialRawValue","initialMaskedValue","initialUnMaskedValue","maskedValue","setMaskedValue","unMaskedValue","setUnmaskedValue","rawValue","setRawValue","isInitialRender","setIsInitialRender","actualValue","onChange","newUnMaskedValue","newMaskedValue","length","undefined","MaskedTextInput"],"sources":["MaskedTextInput.tsx"],"sourcesContent":["import React, {\n  useEffect,\n  useState,\n  forwardRef,\n  ForwardRefRenderFunction,\n} from 'react'\nimport { TextInput, TextInputProps } from 'react-native'\nimport { mask, unMask } from '../utils/mask'\nimport type { FormatType, MaskOptions, StyleObj, TextDecorationOptions } from 'src/@types'\n\n\ntype TIProps = Omit<TextInputProps, 'onChangeText'>\nexport interface MaskedTextInputProps extends TIProps {\n  mask?: string\n  type?: FormatType\n  options?: MaskOptions\n  defaultValue?: string\n  onChangeText: (text: string, rawText: string) => void\n  inputAccessoryView?: JSX.Element\n  textBold?: boolean\n  textItalic?:boolean\n  textDecoration?:TextDecorationOptions\n  style?: StyleObj\n}\n\nexport const MaskedTextInputComponent: ForwardRefRenderFunction<\n  TextInput,\n  MaskedTextInputProps\n> = (\n  {\n    mask: pattern = '',\n    type = 'custom',\n    options = {} as MaskOptions,\n    defaultValue,\n    onChangeText,\n    value,\n    inputAccessoryView,\n    autoCapitalize = 'sentences',\n    textBold,\n    textItalic,\n    textDecoration,\n    style,\n    ...rest\n  },\n  ref\n): JSX.Element => {\n  const styleSheet = [\n    {\n      fontWeight: textBold && 'bold',\n      fontStyle: textItalic && 'italic',\n      textDecorationLine: textDecoration\n    },\n    style\n  ]\n  const getMaskedValue = (value: string) =>\n    mask(value, pattern, type, options, autoCapitalize)\n  const getUnMaskedValue = (value: string) =>\n    unMask(value, type as 'custom' | 'currency')\n\n  const defaultValueCustom = defaultValue || ''\n  const defaultValueCurrency = defaultValue || '0'\n\n  const initialRawValue = value;\n\n  const initialMaskedValue = getMaskedValue(\n    type === 'currency' ? defaultValueCurrency : defaultValueCustom\n  )\n\n  const initialUnMaskedValue = getUnMaskedValue(\n    type === 'currency' ? defaultValueCurrency : defaultValueCustom\n  )\n\n  const [maskedValue, setMaskedValue] = useState(initialMaskedValue)\n  const [unMaskedValue, setUnmaskedValue] = useState(initialUnMaskedValue)\n  const [rawValue, setRawValue] = useState(initialRawValue);\n  const [isInitialRender, setIsInitialRender] = useState(true)\n\n  const actualValue = pattern || type === \"currency\" ? maskedValue : rawValue;\n\n  function onChange(value: string) {\n    const newUnMaskedValue = unMask(value, type as 'custom' | 'currency')\n    const newMaskedValue = mask(newUnMaskedValue, pattern, type, options)\n\n    setMaskedValue(newMaskedValue)\n    setUnmaskedValue(newUnMaskedValue)\n    setRawValue(value);\n  }\n\n  useEffect(() => {\n    if (isInitialRender) {\n      setIsInitialRender(false)\n      return\n    }\n\n    onChangeText(maskedValue, unMaskedValue)\n  }, [maskedValue, unMaskedValue])\n\n  useEffect(() => {\n    if (value) {\n      setMaskedValue(getMaskedValue(value))\n      setUnmaskedValue(getUnMaskedValue(value))\n    } else {\n      setMaskedValue(initialMaskedValue)\n      setUnmaskedValue(initialUnMaskedValue)\n    }\n  }, [value])\n\n  return (\n    <>\n      <TextInput\n        onChangeText={(value) => onChange(value)}\n        ref={ref}\n        maxLength={pattern.length || undefined}\n        autoCapitalize={autoCapitalize}\n        {...rest}\n        value={actualValue}\n        style={styleSheet as StyleObj}\n      />\n      {inputAccessoryView}\n    </>\n  )\n}\n\nexport const MaskedTextInput = forwardRef(MaskedTextInputComponent)\n"],"mappings":"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"}
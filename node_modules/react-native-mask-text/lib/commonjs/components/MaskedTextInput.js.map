{"version":3,"names":["MaskedTextInputComponent","ref","mask","pattern","type","options","defaultValue","onChangeText","value","inputAccessoryView","autoCapitalize","textBold","textItalic","textDecoration","style","rest","styleSheet","fontWeight","fontStyle","textDecorationLine","getMaskedValue","getUnMaskedValue","unMask","defaultValueCustom","defaultValueCurrency","initialRawValue","initialMaskedValue","initialUnMaskedValue","maskedValue","setMaskedValue","useState","unMaskedValue","setUnmaskedValue","rawValue","setRawValue","isInitialRender","setIsInitialRender","actualValue","onChange","newUnMaskedValue","newMaskedValue","useEffect","length","undefined","MaskedTextInput","forwardRef"],"sources":["MaskedTextInput.tsx"],"sourcesContent":["import React, {\n  useEffect,\n  useState,\n  forwardRef,\n  ForwardRefRenderFunction,\n} from 'react'\nimport { TextInput, TextInputProps } from 'react-native'\nimport { mask, unMask } from '../utils/mask'\nimport type { FormatType, MaskOptions, StyleObj, TextDecorationOptions } from 'src/@types'\n\n\ntype TIProps = Omit<TextInputProps, 'onChangeText'>\nexport interface MaskedTextInputProps extends TIProps {\n  mask?: string\n  type?: FormatType\n  options?: MaskOptions\n  defaultValue?: string\n  onChangeText: (text: string, rawText: string) => void\n  inputAccessoryView?: JSX.Element\n  textBold?: boolean\n  textItalic?:boolean\n  textDecoration?:TextDecorationOptions\n  style?: StyleObj\n}\n\nexport const MaskedTextInputComponent: ForwardRefRenderFunction<\n  TextInput,\n  MaskedTextInputProps\n> = (\n  {\n    mask: pattern = '',\n    type = 'custom',\n    options = {} as MaskOptions,\n    defaultValue,\n    onChangeText,\n    value,\n    inputAccessoryView,\n    autoCapitalize = 'sentences',\n    textBold,\n    textItalic,\n    textDecoration,\n    style,\n    ...rest\n  },\n  ref\n): JSX.Element => {\n  const styleSheet = [\n    {\n      fontWeight: textBold && 'bold',\n      fontStyle: textItalic && 'italic',\n      textDecorationLine: textDecoration\n    },\n    style\n  ]\n  const getMaskedValue = (value: string) =>\n    mask(value, pattern, type, options, autoCapitalize)\n  const getUnMaskedValue = (value: string) =>\n    unMask(value, type as 'custom' | 'currency')\n\n  const defaultValueCustom = defaultValue || ''\n  const defaultValueCurrency = defaultValue || '0'\n\n  const initialRawValue = value;\n\n  const initialMaskedValue = getMaskedValue(\n    type === 'currency' ? defaultValueCurrency : defaultValueCustom\n  )\n\n  const initialUnMaskedValue = getUnMaskedValue(\n    type === 'currency' ? defaultValueCurrency : defaultValueCustom\n  )\n\n  const [maskedValue, setMaskedValue] = useState(initialMaskedValue)\n  const [unMaskedValue, setUnmaskedValue] = useState(initialUnMaskedValue)\n  const [rawValue, setRawValue] = useState(initialRawValue);\n  const [isInitialRender, setIsInitialRender] = useState(true)\n\n  const actualValue = pattern || type === \"currency\" ? maskedValue : rawValue;\n\n  function onChange(value: string) {\n    const newUnMaskedValue = unMask(value, type as 'custom' | 'currency')\n    const newMaskedValue = mask(newUnMaskedValue, pattern, type, options)\n\n    setMaskedValue(newMaskedValue)\n    setUnmaskedValue(newUnMaskedValue)\n    setRawValue(value);\n  }\n\n  useEffect(() => {\n    if (isInitialRender) {\n      setIsInitialRender(false)\n      return\n    }\n\n    onChangeText(maskedValue, unMaskedValue)\n  }, [maskedValue, unMaskedValue])\n\n  useEffect(() => {\n    if (value) {\n      setMaskedValue(getMaskedValue(value))\n      setUnmaskedValue(getUnMaskedValue(value))\n    } else {\n      setMaskedValue(initialMaskedValue)\n      setUnmaskedValue(initialUnMaskedValue)\n    }\n  }, [value])\n\n  return (\n    <>\n      <TextInput\n        onChangeText={(value) => onChange(value)}\n        ref={ref}\n        maxLength={pattern.length || undefined}\n        autoCapitalize={autoCapitalize}\n        {...rest}\n        value={actualValue}\n        style={styleSheet as StyleObj}\n      />\n      {inputAccessoryView}\n    </>\n  )\n}\n\nexport const MaskedTextInput = forwardRef(MaskedTextInputComponent)\n"],"mappings":"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"}